#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
template <class type1>
#define ll long long int
#define endl "\n"
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
using ordered_multiset = tree <type1, null_type, less_equal <type1>, rb_tree_tag, tree_order_statistics_node_update>;
 //ordered_multiset <ll> kek;(declaration for multiorder set)
// ordered_set o_set;(declaration)
//kek.order_of_key(i);(strictly less then i for multi order set)
//o_set.order_of_key(5) ;(strictly less then i for multi order set)
#define yes cout << "YES\n"
#define no cout << "NO\n"
ll func(vector<ll>&v,ll n,ll k,vector<ll>&dp)
{
     if(n==1)return 0;
     if(dp[n]!=-1)return dp[n];
     ll mi=(ll)1e16;
     for(ll i=1;i<=k;i++)
     {
            if(n-i>=1)
            {
                ll r;
                r=abs(v[n-i]-v[n])+func(v,n-i,k,dp);
                mi=min(r,mi);
            }
     }
   
     return dp[n]=mi;

   
}
int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
   
      ll n,i,k;
      cin>>n>>k;

       vector<ll>v;
       v.push_back(0);
       for(i=1;i<=n;i++)
       {
           ll r;
           cin>>r;
           v.push_back(r);
         
       }
       vector<ll>dp(n+1,-1);
       cout<<func(v,n,k,dp)<<endl;
       
    return 0;
}
